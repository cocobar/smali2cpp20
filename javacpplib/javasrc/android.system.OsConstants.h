#ifndef __android_system_OsConstants__
#define __android_system_OsConstants__
// H L:\smali2cpp20\x64\Release\out\android\system\OsConstants.smali
#include "java2ctype.h"
#include "java.lang.Object.h"
#include "java.lang.String.h"

namespace android::system{
class OsConstants : public java::lang::Object {
protected:
private:
	OsConstants();
	static void initConstants() = 0;
	static int placeholder();
public:
	static int AF_INET;
	static int AF_INET6;
	static int AF_NETLINK;
	static int AF_PACKET;
	static int AF_UNIX;
	static int AF_UNSPEC;
	static int AI_ADDRCONFIG;
	static int AI_ALL;
	static int AI_CANONNAME;
	static int AI_NUMERICHOST;
	static int AI_NUMERICSERV;
	static int AI_PASSIVE;
	static int AI_V4MAPPED;
	static int ARPHRD_ETHER;
	static int ARPHRD_LOOPBACK;
	static int CAP_AUDIT_CONTROL;
	static int CAP_AUDIT_WRITE;
	static int CAP_BLOCK_SUSPEND;
	static int CAP_CHOWN;
	static int CAP_DAC_OVERRIDE;
	static int CAP_DAC_READ_SEARCH;
	static int CAP_FOWNER;
	static int CAP_FSETID;
	static int CAP_IPC_LOCK;
	static int CAP_IPC_OWNER;
	static int CAP_KILL;
	static int CAP_LAST_CAP;
	static int CAP_LEASE;
	static int CAP_LINUX_IMMUTABLE;
	static int CAP_MAC_ADMIN;
	static int CAP_MAC_OVERRIDE;
	static int CAP_MKNOD;
	static int CAP_NET_ADMIN;
	static int CAP_NET_BIND_SERVICE;
	static int CAP_NET_BROADCAST;
	static int CAP_NET_RAW;
	static int CAP_SETFCAP;
	static int CAP_SETGID;
	static int CAP_SETPCAP;
	static int CAP_SETUID;
	static int CAP_SYSLOG;
	static int CAP_SYS_ADMIN;
	static int CAP_SYS_BOOT;
	static int CAP_SYS_CHROOT;
	static int CAP_SYS_MODULE;
	static int CAP_SYS_NICE;
	static int CAP_SYS_PACCT;
	static int CAP_SYS_PTRACE;
	static int CAP_SYS_RAWIO;
	static int CAP_SYS_RESOURCE;
	static int CAP_SYS_TIME;
	static int CAP_SYS_TTY_CONFIG;
	static int CAP_WAKE_ALARM;
	static int E2BIG;
	static int EACCES;
	static int EADDRINUSE;
	static int EADDRNOTAVAIL;
	static int EAFNOSUPPORT;
	static int EAGAIN;
	static int EAI_AGAIN;
	static int EAI_BADFLAGS;
	static int EAI_FAIL;
	static int EAI_FAMILY;
	static int EAI_MEMORY;
	static int EAI_NODATA;
	static int EAI_NONAME;
	static int EAI_OVERFLOW;
	static int EAI_SERVICE;
	static int EAI_SOCKTYPE;
	static int EAI_SYSTEM;
	static int EALREADY;
	static int EBADF;
	static int EBADMSG;
	static int EBUSY;
	static int ECANCELED;
	static int ECHILD;
	static int ECONNABORTED;
	static int ECONNREFUSED;
	static int ECONNRESET;
	static int EDEADLK;
	static int EDESTADDRREQ;
	static int EDOM;
	static int EDQUOT;
	static int EEXIST;
	static int EFAULT;
	static int EFBIG;
	static int EHOSTUNREACH;
	static int EIDRM;
	static int EILSEQ;
	static int EINPROGRESS;
	static int EINTR;
	static int EINVAL;
	static int EIO;
	static int EISCONN;
	static int EISDIR;
	static int ELOOP;
	static int EMFILE;
	static int EMLINK;
	static int EMSGSIZE;
	static int EMULTIHOP;
	static int ENAMETOOLONG;
	static int ENETDOWN;
	static int ENETRESET;
	static int ENETUNREACH;
	static int ENFILE;
	static int ENOBUFS;
	static int ENODATA;
	static int ENODEV;
	static int ENOENT;
	static int ENOEXEC;
	static int ENOLCK;
	static int ENOLINK;
	static int ENOMEM;
	static int ENOMSG;
	static int ENONET;
	static int ENOPROTOOPT;
	static int ENOSPC;
	static int ENOSR;
	static int ENOSTR;
	static int ENOSYS;
	static int ENOTCONN;
	static int ENOTDIR;
	static int ENOTEMPTY;
	static int ENOTSOCK;
	static int ENOTSUP;
	static int ENOTTY;
	static int ENXIO;
	static int EOPNOTSUPP;
	static int EOVERFLOW;
	static int EPERM;
	static int EPIPE;
	static int EPROTO;
	static int EPROTONOSUPPORT;
	static int EPROTOTYPE;
	static int ERANGE;
	static int EROFS;
	static int ESPIPE;
	static int ESRCH;
	static int ESTALE;
	static int ETH_P_ALL;
	static int ETH_P_ARP;
	static int ETH_P_IP;
	static int ETH_P_IPV6;
	static int ETIME;
	static int ETIMEDOUT;
	static int ETXTBSY;
	static int EUSERS;
	static int EXDEV;
	static int EXIT_FAILURE;
	static int EXIT_SUCCESS;
	static int FD_CLOEXEC;
	static int FIONREAD;
	static int F_DUPFD;
	static int F_DUPFD_CLOEXEC;
	static int F_GETFD;
	static int F_GETFL;
	static int F_GETLK;
	static int F_GETLK64;
	static int F_GETOWN;
	static int F_OK;
	static int F_RDLCK;
	static int F_SETFD;
	static int F_SETFL;
	static int F_SETLK;
	static int F_SETLK64;
	static int F_SETLKW;
	static int F_SETLKW64;
	static int F_SETOWN;
	static int F_UNLCK;
	static int F_WRLCK;
	static int ICMP6_ECHO_REPLY;
	static int ICMP6_ECHO_REQUEST;
	static int ICMP_ECHO;
	static int ICMP_ECHOREPLY;
	static int IFA_F_DADFAILED;
	static int IFA_F_DEPRECATED;
	static int IFA_F_HOMEADDRESS;
	static int IFA_F_NODAD;
	static int IFA_F_OPTIMISTIC;
	static int IFA_F_PERMANENT;
	static int IFA_F_SECONDARY;
	static int IFA_F_TEMPORARY;
	static int IFA_F_TENTATIVE;
	static int IFF_ALLMULTI;
	static int IFF_AUTOMEDIA;
	static int IFF_BROADCAST;
	static int IFF_DEBUG;
	static int IFF_DYNAMIC;
	static int IFF_LOOPBACK;
	static int IFF_MASTER;
	static int IFF_MULTICAST;
	static int IFF_NOARP;
	static int IFF_NOTRAILERS;
	static int IFF_POINTOPOINT;
	static int IFF_PORTSEL;
	static int IFF_PROMISC;
	static int IFF_RUNNING;
	static int IFF_SLAVE;
	static int IFF_UP;
	static int IPPROTO_ICMP;
	static int IPPROTO_ICMPV6;
	static int IPPROTO_IP;
	static int IPPROTO_IPV6;
	static int IPPROTO_RAW;
	static int IPPROTO_TCP;
	static int IPPROTO_UDP;
	static int IPV6_CHECKSUM;
	static int IPV6_MULTICAST_HOPS;
	static int IPV6_MULTICAST_IF;
	static int IPV6_MULTICAST_LOOP;
	static int IPV6_RECVDSTOPTS;
	static int IPV6_RECVHOPLIMIT;
	static int IPV6_RECVHOPOPTS;
	static int IPV6_RECVPKTINFO;
	static int IPV6_RECVRTHDR;
	static int IPV6_RECVTCLASS;
	static int IPV6_TCLASS;
	static int IPV6_UNICAST_HOPS;
	static int IPV6_V6ONLY;
	static int IP_MULTICAST_ALL;
	static int IP_MULTICAST_IF;
	static int IP_MULTICAST_LOOP;
	static int IP_MULTICAST_TTL;
	static int IP_RECVTOS;
	static int IP_TOS;
	static int IP_TTL;
	static int MAP_FIXED;
	static int MAP_POPULATE;
	static int MAP_PRIVATE;
	static int MAP_SHARED;
	static int MCAST_BLOCK_SOURCE;
	static int MCAST_JOIN_GROUP;
	static int MCAST_JOIN_SOURCE_GROUP;
	static int MCAST_LEAVE_GROUP;
	static int MCAST_LEAVE_SOURCE_GROUP;
	static int MCAST_UNBLOCK_SOURCE;
	static int MCL_CURRENT;
	static int MCL_FUTURE;
	static int MSG_CTRUNC;
	static int MSG_DONTROUTE;
	static int MSG_EOR;
	static int MSG_OOB;
	static int MSG_PEEK;
	static int MSG_TRUNC;
	static int MSG_WAITALL;
	static int MS_ASYNC;
	static int MS_INVALIDATE;
	static int MS_SYNC;
	static int NETLINK_NETFILTER;
	static int NETLINK_ROUTE;
	static int NI_DGRAM;
	static int NI_NAMEREQD;
	static int NI_NOFQDN;
	static int NI_NUMERICHOST;
	static int NI_NUMERICSERV;
	static int O_ACCMODE;
	static int O_APPEND;
	static int O_CLOEXEC;
	static int O_CREAT;
	static int O_DSYNC;
	static int O_EXCL;
	static int O_NOCTTY;
	static int O_NOFOLLOW;
	static int O_NONBLOCK;
	static int O_RDONLY;
	static int O_RDWR;
	static int O_SYNC;
	static int O_TRUNC;
	static int O_WRONLY;
	static int POLLERR;
	static int POLLHUP;
	static int POLLIN;
	static int POLLNVAL;
	static int POLLOUT;
	static int POLLPRI;
	static int POLLRDBAND;
	static int POLLRDNORM;
	static int POLLWRBAND;
	static int POLLWRNORM;
	static int PROT_EXEC;
	static int PROT_NONE;
	static int PROT_READ;
	static int PROT_WRITE;
	static int PR_CAP_AMBIENT;
	static int PR_CAP_AMBIENT_RAISE;
	static int PR_GET_DUMPABLE;
	static int PR_SET_DUMPABLE;
	static int PR_SET_NO_NEW_PRIVS;
	static int RLIMIT_NOFILE;
	static int RTMGRP_IPV4_IFADDR;
	static int RTMGRP_IPV4_MROUTE;
	static int RTMGRP_IPV4_ROUTE;
	static int RTMGRP_IPV4_RULE;
	static int RTMGRP_IPV6_IFADDR;
	static int RTMGRP_IPV6_IFINFO;
	static int RTMGRP_IPV6_MROUTE;
	static int RTMGRP_IPV6_PREFIX;
	static int RTMGRP_IPV6_ROUTE;
	static int RTMGRP_LINK;
	static int RTMGRP_NEIGH;
	static int RTMGRP_NOTIFY;
	static int RTMGRP_TC;
	static int RT_SCOPE_HOST;
	static int RT_SCOPE_LINK;
	static int RT_SCOPE_NOWHERE;
	static int RT_SCOPE_SITE;
	static int RT_SCOPE_UNIVERSE;
	static int R_OK;
	static int SEEK_CUR;
	static int SEEK_END;
	static int SEEK_SET;
	static int SHUT_RD;
	static int SHUT_RDWR;
	static int SHUT_WR;
	static int SIGABRT;
	static int SIGALRM;
	static int SIGBUS;
	static int SIGCHLD;
	static int SIGCONT;
	static int SIGFPE;
	static int SIGHUP;
	static int SIGILL;
	static int SIGINT;
	static int SIGIO;
	static int SIGKILL;
	static int SIGPIPE;
	static int SIGPROF;
	static int SIGPWR;
	static int SIGQUIT;
	static int SIGRTMAX;
	static int SIGRTMIN;
	static int SIGSEGV;
	static int SIGSTKFLT;
	static int SIGSTOP;
	static int SIGSYS;
	static int SIGTERM;
	static int SIGTRAP;
	static int SIGTSTP;
	static int SIGTTIN;
	static int SIGTTOU;
	static int SIGURG;
	static int SIGUSR1;
	static int SIGUSR2;
	static int SIGVTALRM;
	static int SIGWINCH;
	static int SIGXCPU;
	static int SIGXFSZ;
	static int SIOCGIFADDR;
	static int SIOCGIFBRDADDR;
	static int SIOCGIFDSTADDR;
	static int SIOCGIFNETMASK;
	static int SOCK_DGRAM;
	static int SOCK_RAW;
	static int SOCK_SEQPACKET;
	static int SOCK_STREAM;
	static int SOL_SOCKET;
	static int SO_BINDTODEVICE;
	static int SO_BROADCAST;
	static int SO_DEBUG;
	static int SO_DOMAIN;
	static int SO_DONTROUTE;
	static int SO_ERROR;
	static int SO_KEEPALIVE;
	static int SO_LINGER;
	static int SO_OOBINLINE;
	static int SO_PASSCRED;
	static int SO_PEERCRED;
	static int SO_PROTOCOL;
	static int SO_RCVBUF;
	static int SO_RCVLOWAT;
	static int SO_RCVTIMEO;
	static int SO_REUSEADDR;
	static int SO_SNDBUF;
	static int SO_SNDLOWAT;
	static int SO_SNDTIMEO;
	static int SO_TYPE;
	static int STDERR_FILENO;
	static int STDIN_FILENO;
	static int STDOUT_FILENO;
	static int ST_MANDLOCK;
	static int ST_NOATIME;
	static int ST_NODEV;
	static int ST_NODIRATIME;
	static int ST_NOEXEC;
	static int ST_NOSUID;
	static int ST_RDONLY;
	static int ST_RELATIME;
	static int ST_SYNCHRONOUS;
	static int S_IFBLK;
	static int S_IFCHR;
	static int S_IFDIR;
	static int S_IFIFO;
	static int S_IFLNK;
	static int S_IFMT;
	static int S_IFREG;
	static int S_IFSOCK;
	static int S_IRGRP;
	static int S_IROTH;
	static int S_IRUSR;
	static int S_IRWXG;
	static int S_IRWXO;
	static int S_IRWXU;
	static int S_ISGID;
	static int S_ISUID;
	static int S_ISVTX;
	static int S_IWGRP;
	static int S_IWOTH;
	static int S_IWUSR;
	static int S_IXGRP;
	static int S_IXOTH;
	static int S_IXUSR;
	static int TCP_NODELAY;
	static int TCP_USER_TIMEOUT;
	static int TIOCOUTQ;
	static int UDP_ENCAP;
	static int UDP_ENCAP_ESPINUDP;
	static int UDP_ENCAP_ESPINUDP_NON_IKE;
	static int UNIX_PATH_MAX;
	static int WCONTINUED;
	static int WEXITED;
	static int WNOHANG;
	static int WNOWAIT;
	static int WSTOPPED;
	static int WUNTRACED;
	static int W_OK;
	static int XATTR_CREATE;
	static int XATTR_REPLACE;
	static int X_OK;
	static int _LINUX_CAPABILITY_VERSION_3;
	static int _SC_2_CHAR_TERM;
	static int _SC_2_C_BIND;
	static int _SC_2_C_DEV;
	static int _SC_2_C_VERSION;
	static int _SC_2_FORT_DEV;
	static int _SC_2_FORT_RUN;
	static int _SC_2_LOCALEDEF;
	static int _SC_2_SW_DEV;
	static int _SC_2_UPE;
	static int _SC_2_VERSION;
	static int _SC_AIO_LISTIO_MAX;
	static int _SC_AIO_MAX;
	static int _SC_AIO_PRIO_DELTA_MAX;
	static int _SC_ARG_MAX;
	static int _SC_ASYNCHRONOUS_IO;
	static int _SC_ATEXIT_MAX;
	static int _SC_AVPHYS_PAGES;
	static int _SC_BC_BASE_MAX;
	static int _SC_BC_DIM_MAX;
	static int _SC_BC_SCALE_MAX;
	static int _SC_BC_STRING_MAX;
	static int _SC_CHILD_MAX;
	static int _SC_CLK_TCK;
	static int _SC_COLL_WEIGHTS_MAX;
	static int _SC_DELAYTIMER_MAX;
	static int _SC_EXPR_NEST_MAX;
	static int _SC_FSYNC;
	static int _SC_GETGR_R_SIZE_MAX;
	static int _SC_GETPW_R_SIZE_MAX;
	static int _SC_IOV_MAX;
	static int _SC_JOB_CONTROL;
	static int _SC_LINE_MAX;
	static int _SC_LOGIN_NAME_MAX;
	static int _SC_MAPPED_FILES;
	static int _SC_MEMLOCK;
	static int _SC_MEMLOCK_RANGE;
	static int _SC_MEMORY_PROTECTION;
	static int _SC_MESSAGE_PASSING;
	static int _SC_MQ_OPEN_MAX;
	static int _SC_MQ_PRIO_MAX;
	static int _SC_NGROUPS_MAX;
	static int _SC_NPROCESSORS_CONF;
	static int _SC_NPROCESSORS_ONLN;
	static int _SC_OPEN_MAX;
	static int _SC_PAGESIZE;
	static int _SC_PAGE_SIZE;
	static int _SC_PASS_MAX;
	static int _SC_PHYS_PAGES;
	static int _SC_PRIORITIZED_IO;
	static int _SC_PRIORITY_SCHEDULING;
	static int _SC_REALTIME_SIGNALS;
	static int _SC_RE_DUP_MAX;
	static int _SC_RTSIG_MAX;
	static int _SC_SAVED_IDS;
	static int _SC_SEMAPHORES;
	static int _SC_SEM_NSEMS_MAX;
	static int _SC_SEM_VALUE_MAX;
	static int _SC_SHARED_MEMORY_OBJECTS;
	static int _SC_SIGQUEUE_MAX;
	static int _SC_STREAM_MAX;
	static int _SC_SYNCHRONIZED_IO;
	static int _SC_THREADS;
	static int _SC_THREAD_ATTR_STACKADDR;
	static int _SC_THREAD_ATTR_STACKSIZE;
	static int _SC_THREAD_DESTRUCTOR_ITERATIONS;
	static int _SC_THREAD_KEYS_MAX;
	static int _SC_THREAD_PRIORITY_SCHEDULING;
	static int _SC_THREAD_PRIO_INHERIT;
	static int _SC_THREAD_PRIO_PROTECT;
	static int _SC_THREAD_SAFE_FUNCTIONS;
	static int _SC_THREAD_STACK_MIN;
	static int _SC_THREAD_THREADS_MAX;
	static int _SC_TIMERS;
	static int _SC_TIMER_MAX;
	static int _SC_TTY_NAME_MAX;
	static int _SC_TZNAME_MAX;
	static int _SC_VERSION;
	static int _SC_XBS5_ILP32_OFF32;
	static int _SC_XBS5_ILP32_OFFBIG;
	static int _SC_XBS5_LP64_OFF64;
	static int _SC_XBS5_LPBIG_OFFBIG;
	static int _SC_XOPEN_CRYPT;
	static int _SC_XOPEN_ENH_I18N;
	static int _SC_XOPEN_LEGACY;
	static int _SC_XOPEN_REALTIME;
	static int _SC_XOPEN_REALTIME_THREADS;
	static int _SC_XOPEN_SHM;
	static int _SC_XOPEN_UNIX;
	static int _SC_XOPEN_VERSION;
	static int _SC_XOPEN_XCU_VERSION;
	static void static_cinit();
	static int CAP_TO_INDEX(int x);
	static int CAP_TO_MASK(int x);
	static bool S_ISBLK(int mode);
	static bool S_ISCHR(int mode);
	static bool S_ISDIR(int mode);
	static bool S_ISFIFO(int mode);
	static bool S_ISLNK(int mode);
	static bool S_ISREG(int mode);
	static bool S_ISSOCK(int mode);
	static bool WCOREDUMP(int status);
	static int WEXITSTATUS(int status);
	static bool WIFEXITED(int status);
	static bool WIFSIGNALED(int status);
	static bool WIFSTOPPED(int status);
	static int WSTOPSIG(int status);
	static int WTERMSIG(int status);
	static std::shared_ptr<java::lang::String> errnoName(int errno);
	static std::shared_ptr<java::lang::String> gaiName(int error);
private:
	class static_init_class {
	public:
		static_init_class(){
			android::system::OsConstants::static_cinit();
		}
	};
	static inline std::shared_ptr<static_init_class> tmp = std::make_shared<static_init_class>();
public:
	virtual ~OsConstants(){
	}

}; // class OsConstants
}; // namespace android::system

#endif //__android_system_OsConstants__

